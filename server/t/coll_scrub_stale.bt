#!/usr/bin/perl

use strict;
use Test::More tests => 110006;
use FindBin qw($Bin);
use lib "$Bin/lib";
use MemcachedTest;

=head
#my $server = get_memcached($engine, "-m 512 -X .libs/ascii_scrub.so -z 127.0.0.1:2181");
#my $another = get_memcached($engine, "-m 512 -X .libs/ascii_scrub.so -z 127.0.0.1:2181");
=cut
my $engine = shift;
my $server = get_memcached($engine, "-m 512 -X .libs/ascii_scrub.so");
my $sock = $server->sock;

my $cmd;
my $val;
my $rst;
my $msg;

my $kcnt = 10000;
my $ecnt = 10;
my $kidx;
my $eidx;
my $len;
my $prefix;

$prefix = "PrefixA";
for ($kidx = 0; $kidx < $kcnt; $kidx += 2) {
    $cmd = "bop create $prefix:KEY_$kidx 11 0 0"; $rst = "CREATED";
    $msg = "B+Tree create: $prefix:KEY_$kidx";
    mem_cmd_is($sock, $cmd, "", $rst, $msg);
    for ($eidx = 0; $eidx < $ecnt; $eidx++) {
        $val = "$prefix:KEY_$kidx DATA_$eidx";
        $len = length($val);
        $cmd = "bop insert $prefix:KEY_$kidx $eidx $len"; $rst = "STORED";
        $msg = "B+tree insert: $val";
        mem_cmd_is($sock, $cmd, $val, $rst, $msg);
    }
}

$prefix = "PrefixB";
for ($kidx = 1; $kidx < $kcnt; $kidx += 2) {
    $cmd = "bop create $prefix:KEY_$kidx 11 0 0"; $rst = "CREATED";
    $msg = "B+Tree create: $prefix:KEY_$kidx";
    mem_cmd_is($sock, $cmd, "", $rst, $msg);
    for ($eidx = 0; $eidx < $ecnt; $eidx++) {
        $val = "$prefix:KEY_$kidx DATA_$eidx";
        $len = length($val);
        $cmd = "bop insert $prefix:KEY_$kidx $eidx $len"; $rst = "STORED";
        $msg = "B+tree insert: $val";
        mem_cmd_is($sock, $cmd, $val, $rst, $msg);
    }
}

$cmd = "flush_prefix PrefixA"; $rst = "OK";
mem_cmd_is($sock, $cmd, "", $rst);

$cmd = "scrub stale"; $rst = "NOT_SUPPORTED";
mem_cmd_is($sock, $cmd, "", $rst);
=head
sleep(1);
my $stats  = mem_stats($sock, "scrub");
my $status  = $stats->{"scrubber:status"};
my $lastrun = $stats->{"scrubber:last_run"};
my $visited = $stats->{"scrubber:visited"};
my $cleaned = $stats->{"scrubber:cleaned"};
print "status   = $status\r\n";
print "last_run = $lastrun\r\n";
print "visited  = $visited\r\n";
print "cleaned  = $visited\r\n";
=cut

$cmd = "scrub"; $rst = "OK"; $msg = "scrub started";
mem_cmd_is($sock, $cmd, "", $rst, $msg);
sleep(1);
my $stats  = mem_stats($sock, "scrub");
my $status  = $stats->{"scrubber:status"};
my $lastrun = $stats->{"scrubber:last_run"};
my $visited = $stats->{"scrubber:visited"};
my $cleaned = $stats->{"scrubber:cleaned"};
print "last_run = $lastrun\r\n";
is ($status,  "stopped", "stopped");
is ($visited, $kcnt, "visited");
is ($cleaned, $kcnt/2, "cleaned");

# after test
release_memcached($engine, $server);
